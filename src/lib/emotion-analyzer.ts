// ÊÉÖÁª™ÂàÜÊûêÂô® - ÂàÜÊûêÊñáÊú¨ÊÉÖÁª™Âπ∂ËøîÂõûÂØπÂ∫îÁöÑË°®ÊÉÖ
export interface EmotionResult {
  emotion: string;
  emoji: string;
  intensity: number; // 0-1
  confidence: number; // 0-1
}

// ÊÉÖÁª™ÂÖ≥ÈîÆËØçÊò†Â∞Ñ
const emotionKeywords = {
  // ÁßØÊûÅÊÉÖÁª™
  happy: {
    keywords: ['ÂºÄÂøÉ', 'È´òÂÖ¥', 'Âø´‰πê', 'ÂÖ¥Â•ã', 'Êª°ÊÑè', 'ÂñúÊ¨¢', 'Áà±', 'Ê£í', 'Â•Ω', 'ÊàêÂäü', 'ËÉúÂà©', 'Â∫ÜÁ•ù', 'Á¨ë', 'ÂìàÂìà', 'üòä', 'üòÑ', 'üòÅ', 'ü•≥'],
    emoji: 'üòä',
    intensity: 0.8
  },
  excited: {
    keywords: ['ÊøÄÂä®', 'ÂÖ¥Â•ã', 'ÊúüÂæÖ', 'Ëø´‰∏çÂèäÂæÖ', 'Â§™Ê£í‰∫Ü', 'amazing', 'awesome', 'fantastic', 'incredible', 'wow', 'Âìá', 'Â§™ÂéâÂÆ≥‰∫Ü'],
    emoji: 'ü§©',
    intensity: 0.9
  },
  love: {
    keywords: ['Áà±', 'ÂñúÊ¨¢', 'love', '‚ù§Ô∏è', 'üíï', 'üíñ', 'üíù', 'üíó', 'üíò', 'ÂøÉ', 'ÂøÉÂä®', 'Ëø∑ÊÅã'],
    emoji: 'üòç',
    intensity: 0.9
  },
  grateful: {
    keywords: ['Ë∞¢Ë∞¢', 'ÊÑüË∞¢', 'ÊÑüÊøÄ', 'thank', 'thanks', 'appreciate', 'ÊÑüÊÅ©', 'üôè'],
    emoji: 'üôè',
    intensity: 0.7
  },
  
  // Ê∂àÊûÅÊÉÖÁª™
  sad: {
    keywords: ['ÈöæËøá', '‰º§ÂøÉ', 'ÊÇ≤‰º§', 'Â§±Êúõ', 'Ê≤Æ‰∏ß', 'sad', 'depressed', 'upset', 'üò¢', 'üò≠', 'üòî'],
    emoji: 'üò¢',
    intensity: 0.8
  },
  angry: {
    keywords: ['ÁîüÊ∞î', 'ÊÑ§ÊÄí', 'ÊÅºÁÅ´', 'angry', 'mad', 'furious', 'annoyed', 'üò†', 'üò°', 'ü§¨'],
    emoji: 'üò†',
    intensity: 0.8
  },
  worried: {
    keywords: ['ÊãÖÂøÉ', 'ÁÑ¶Ëôë', 'Á¥ßÂº†', 'worried', 'anxious', 'nervous', 'concerned', 'üò∞', 'üòü', 'üòï'],
    emoji: 'üò∞',
    intensity: 0.7
  },
  confused: {
    keywords: ['Âõ∞ÊÉë', 'Ëø∑Ëå´', '‰∏çÊáÇ', '‰∏çÊòéÁôΩ', 'confused', 'puzzled', 'ü§î', 'üòï', '‚ùì'],
    emoji: 'ü§î',
    intensity: 0.6
  },
  
  // ‰∏≠ÊÄßÊÉÖÁª™
  neutral: {
    keywords: ['ÂóØ', 'Â•ΩÁöÑ', 'ok', 'okay', 'Áü•ÈÅì‰∫Ü', 'ÊòéÁôΩ', '‰∫ÜËß£', 'ok'],
    emoji: 'üòê',
    intensity: 0.3
  },
  thinking: {
    keywords: ['ÊÄùËÄÉ', 'ËÄÉËôë', 'ÊÉ≥ÊÉ≥', 'think', 'consider', 'ponder', 'ü§î', 'üí≠'],
    emoji: 'ü§î',
    intensity: 0.5
  },
  serious: {
    keywords: ['‰∏•ËÇÉ', 'ËÆ§Áúü', 'ÈáçË¶Å', 'serious', 'important', 'critical', 'urgent', 'Á¥ßÊÄ•', '‰∏•Èáç'],
    emoji: 'üòê',
    intensity: 0.6
  },
  
  // ÊäÄÊúØÁõ∏ÂÖ≥
  technical: {
    keywords: ['‰ª£Á†Å', 'ÁºñÁ®ã', 'ÊäÄÊúØ', 'ÂºÄÂèë', 'code', 'programming', 'tech', 'debug', 'bug', 'function', 'API', 'Êï∞ÊçÆÂ∫ì', 'ÁÆóÊ≥ï'],
    emoji: 'üíª',
    intensity: 0.7
  },
  learning: {
    keywords: ['Â≠¶‰π†', 'Â≠¶‰ºö', 'ÊéåÊè°', 'learn', 'study', 'understand', 'Áü•ËØÜ', 'ÊäÄËÉΩ', 'ÊïôÁ®ã', 'ÊïôÂ≠¶'],
    emoji: 'üìö',
    intensity: 0.7
  },
  creative: {
    keywords: ['ÂàõÊÑè', 'Âàõ‰Ωú', 'ËÆæËÆ°', 'creative', 'design', 'art', 'Âàõ‰Ωú', 'ÁÅµÊÑü', 'ÊÉ≥Ê≥ï', 'ÂàõÊñ∞'],
    emoji: 'üé®',
    intensity: 0.8
  }
};

// ÂàÜÊûêÊñáÊú¨ÊÉÖÁª™
export function analyzeEmotion(text: string): EmotionResult {
  if (!text || text.trim().length === 0) {
    return {
      emotion: 'neutral',
      emoji: 'üòê',
      intensity: 0.3,
      confidence: 0.5
    };
  }

  const lowerText = text.toLowerCase();
  const emotions = Object.entries(emotionKeywords);
  
  let bestMatch = {
    emotion: 'neutral',
    emoji: 'üòê',
    intensity: 0.3,
    confidence: 0.3
  };

  let maxScore = 0;

  for (const [emotion, config] of emotions) {
    let score = 0;
    let matchCount = 0;

    // Ê£ÄÊü•ÂÖ≥ÈîÆËØçÂåπÈÖç
    for (const keyword of config.keywords) {
      if (lowerText.includes(keyword.toLowerCase())) {
        score += config.intensity;
        matchCount++;
      }
    }

    // ËÆ°ÁÆóÁΩÆ‰ø°Â∫¶
    const confidence = Math.min(matchCount / config.keywords.length * 2, 1);
    const finalScore = score * confidence;

    if (finalScore > maxScore) {
      maxScore = finalScore;
      bestMatch = {
        emotion,
        emoji: config.emoji,
        intensity: Math.min(score, 1),
        confidence
      };
    }
  }

  // Â¶ÇÊûúÊ≤°ÊúâÂåπÈÖçÂà∞‰ªª‰ΩïÊÉÖÁª™ÔºåËøîÂõû‰∏≠ÊÄß
  if (maxScore === 0) {
    return {
      emotion: 'neutral',
      emoji: 'üòê',
      intensity: 0.3,
      confidence: 0.5
    };
  }

  return bestMatch;
}

// Ê†πÊçÆAIÂõûÂ§çÂÜÖÂÆπÂàÜÊûêAIÁöÑÊÉÖÁª™
export function analyzeAIEmotion(content: string): EmotionResult {
  const emotion = analyzeEmotion(content);
  
  // AIÁâπÊúâÁöÑÊÉÖÁª™Ë∞ÉÊï¥
  if (content.includes('Êä±Ê≠â') || content.includes('ÂØπ‰∏çËµ∑') || content.includes('sorry')) {
    return {
      emotion: 'apologetic',
      emoji: 'üòÖ',
      intensity: 0.7,
      confidence: 0.8
    };
  }
  
  if (content.includes('ÊÅ≠Âñú') || content.includes('Á•ùË¥∫') || content.includes('congratulations')) {
    return {
      emotion: 'congratulatory',
      emoji: 'üéâ',
      intensity: 0.8,
      confidence: 0.8
    };
  }
  
  if (content.includes('Âª∫ËÆÆ') || content.includes('Êé®Ëçê') || content.includes('Âª∫ËÆÆ')) {
    return {
      emotion: 'helpful',
      emoji: 'üí°',
      intensity: 0.6,
      confidence: 0.7
    };
  }
  
  if (content.includes('Ë≠¶Âëä') || content.includes('Ê≥®ÊÑè') || content.includes('warning')) {
    return {
      emotion: 'warning',
      emoji: '‚ö†Ô∏è',
      intensity: 0.8,
      confidence: 0.8
    };
  }
  
  return emotion;
}

// Ëé∑ÂèñÊÉÖÁª™Âä®ÁîªÁ±ªÂêç
export function getEmotionAnimationClass(emotion: string, intensity: number): string {
  const baseClass = 'emotion-emoji';
  const intensityClass = intensity > 0.7 ? 'high-intensity' : intensity > 0.4 ? 'medium-intensity' : 'low-intensity';
  
  return `${baseClass} ${intensityClass} emotion-${emotion}`;
}

// Ëé∑ÂèñÊÉÖÁª™È¢úËâ≤
export function getEmotionColor(emotion: string): string {
  const colors = {
    happy: '#FFD700',
    excited: '#FF6B6B',
    love: '#FF69B4',
    grateful: '#32CD32',
    sad: '#87CEEB',
    angry: '#FF4500',
    worried: '#FFA500',
    confused: '#9370DB',
    neutral: '#A9A9A9',
    thinking: '#4682B4',
    serious: '#696969',
    technical: '#00CED1',
    learning: '#228B22',
    creative: '#FF1493',
    apologetic: '#FFB6C1',
    congratulatory: '#FFD700',
    helpful: '#98FB98',
    warning: '#FF8C00'
  };
  
  return colors[emotion as keyof typeof colors] || '#A9A9A9';
}
